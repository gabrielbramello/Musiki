    # Configuração principal do NGINX
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        # Configurações básicas
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        charset utf-8;

        # Logs
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 20M;

        # Gzip
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private auth; 
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            text/json
            application/x-javascript
            application/javascript
            application/xml+rss
            application/json
            application/rss+xml
            application/atom+xml
            image/svg+xml;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
        limit_req_zone $binary_remote_addr zone=static:10m rate=100r/m;

        # Upstream para backend
        upstream backend {
            server spring-app:8080;
            keepalive 32;
        }

        # Upstream para frontend
        upstream frontend {
            server spa-app:3000;
            keepalive 32;
        }

        # Servidor HTTP - Redireciona para HTTPS ou serve conteúdo para Certbot
        server {
            listen 80;
            server_name samm.dev.br www.samm.dev.br localhost;
            
            # Localização para validação do Certbot (prioridade alta)
            location /.well-known/acme-challenge/ {
                root /var/www/certbot;
                try_files $uri $uri/ =404;
            }

            # Redirecionar todo o resto na porta 80 para HTTPS
            location / {
                return 301 https://$host$request_uri;
            }
        }

        # Servidor HTTPS - Serve a aplicação real
        server {
            listen 443 ssl http2;
            server_name samm.dev.br www.samm.dev.br;

            # Certificados SSL
            ssl_certificate /etc/letsencrypt/live/samm.dev.br-0001/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/samm.dev.br-0001/privkey.pem;

            # Configurações SSL
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_prefer_server_ciphers off;
            ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
            
            # HSTS
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            
            # Outros cabeçalhos de segurança
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;

            # Localização para validação do Certbot (necessário para renovação HTTPS)
            location /.well-known/acme-challenge/ {
                root /var/www/certbot;
                try_files $uri $uri/ =404;
            }

            # API Routes
            location /api/ {
                limit_req zone=api burst=10 nodelay;
                proxy_pass http://backend:8080;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 60s;
                proxy_buffering off;
            }

            # Frontend Routes (todas as outras requisições)
            location / {
                limit_req zone=static burst=50 nodelay;
                proxy_pass http://frontend/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 60s;
                proxy_buffering off;
            }
        }
    }